Docker commands - SpringBoot

building image =  ./mvnw spring-boot:build-image "-Dspring-boot.build-image.imageName=avanishraj005/firstjobapplication"

push image -  docker push avanishraj005/firstjobapplication        

show all docker images = docker images   

show docker containers = docker ps

run docker = docker run -p 8080:8080 avanishraj005/firstjobapplication    

run docker postgres and create container = docker run -d --name db -e POSTGRES_PASSWORD=avanish postgres

create another container for admin in postgres = docker run -d --name pgadmin -e PGADMIN_DEFAULT_EMAIL=avanishraj005@gmail.com -e PGADMIN_DEFAULT_PASSWORD=avanish dpage/pgadmin4

docker exec -it pgadmin ping db

docker rm -f db pgadmin

Using networks:

docker network create my-network

docker run -d --name db --network my-network -e POSTGRES_PASSWORD=avanish postgres

docker run -d --name pgadmin --network my-network -e PGADMIN_DEFAULT_EMAIL=avanishraj005@gmail.com -e PGADMIN_DEFAULT_PASSWORD=avanish dpage/pgadmin4





# Docker-compose yaml file


services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: avanish
      POSTGRES_PASSWORD: avanish
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
networks:
  postgres:
    driver: bridge
volumes:
  postgres:
  pgadmin:

